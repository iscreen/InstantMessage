/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.niu.client;

import com.niu.server.Constants;
import java.awt.Canvas;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.KeyEvent;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.io.*;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;

/**
 *
 * @author Dean Lin
 */
public class MainForm extends javax.swing.JFrame {

    public String folderIconPath;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        try{
            folderIconPath = this.getClass().getResource("/images").toString().replaceAll("file:", "");
            avatar.setIcon(new ImageIcon(folderIconPath + "/avatar.png"));
            tfUserName.setText(Singleton.client.getName());
            this.pnlFriendCurrent.setVisible(false);

        } catch(Exception ex) {
            System.out.println("Exception - MainForm() - " + ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        avatar = new javax.swing.JLabel();
        tfUserName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tabPanel = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFriendContacts = new javax.swing.JList(FriendManager.ListFriend);
        jScrollPane2 = new javax.swing.JScrollPane();
        listGroup = new javax.swing.JList<>();
        pnlFriendCurrent = new javax.swing.JPanel();
        lbNameFriendSelected = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnSend = new javax.swing.JButton();
        tbInput = new javax.swing.JTextField();
        scrChatBox = new javax.swing.JScrollPane();
        pnlChatBox = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat");
        setBackground(new java.awt.Color(232, 255, 227));
        setMinimumSize(new java.awt.Dimension(900, 700));
        setPreferredSize(new java.awt.Dimension(940, 729));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(232, 255, 227));

        jPanel1.setBackground(new java.awt.Color(232, 255, 227));
        jPanel1.setOpaque(false);

        avatar.setText("avatar");
        avatar.setMinimumSize(new java.awt.Dimension(128, 128));
        avatar.setPreferredSize(new java.awt.Dimension(128, 128));
        avatar.setSize(new java.awt.Dimension(128, 128));

        tfUserName.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        tfUserName.setText("jLabel1");

        jLabel2.setText("Ready");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfUserName)
                    .addComponent(jLabel2))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(tfUserName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(avatar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(270, 562));

        tabPanel.setBackground(new java.awt.Color(232, 255, 227));
        tabPanel.setEnabled(false);
        tabPanel.setName("CONTACTS"); // NOI18N
        tabPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabPanelStateChanged(evt);
            }
        });

        listFriendContacts.setFont(new java.awt.Font("PT Serif Caption", 0, 16)); // NOI18N
        listFriendContacts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listFriendContacts.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listFriendContacts.setPreferredSize(new java.awt.Dimension(54, 130));
        listFriendContacts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listFriendContactsMousePressed(evt);
            }
        });
        listFriendContacts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listFriendContactsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listFriendContacts);

        tabPanel.addTab("CONTACTS", jScrollPane1);

        jScrollPane2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N

        listGroup.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        listGroup.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listGroup);

        tabPanel.addTab("GROUP", jScrollPane2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(tabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        tabPanel.getAccessibleContext().setAccessibleName("CONCATS");

        pnlFriendCurrent.setOpaque(false);
        pnlFriendCurrent.setPreferredSize(new java.awt.Dimension(890, 750));

        lbNameFriendSelected.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lbNameFriendSelected.setText("jLabel1");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
        jLabel1.setText("Status");

        jLabel3.setBackground(new java.awt.Color(211, 211, 211));
        jLabel3.setForeground(new java.awt.Color(211, 211, 211));
        jLabel3.setText("____________________________________________________________________________________________________________________________________________");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/friend.png"))); // NOI18N

        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(80, 77));

        btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/send.png"))); // NOI18N
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        tbInput.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        tbInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbInputKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(tbInput, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        scrChatBox.setBackground(new java.awt.Color(232, 255, 227));
        scrChatBox.setBorder(null);
        scrChatBox.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrChatBox.setAutoscrolls(true);
        scrChatBox.setOpaque(false);
        scrChatBox.setPreferredSize(new java.awt.Dimension(650, 350));
        scrChatBox.setViewportView(pnlChatBox);

        pnlChatBox.setBackground(new java.awt.Color(232, 255, 227));
        pnlChatBox.setPreferredSize(new java.awt.Dimension(650, 490));
        pnlChatBox.setSize(new java.awt.Dimension(650, 10000));

        javax.swing.GroupLayout pnlChatBoxLayout = new javax.swing.GroupLayout(pnlChatBox);
        pnlChatBox.setLayout(pnlChatBoxLayout);
        pnlChatBoxLayout.setHorizontalGroup(
            pnlChatBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 652, Short.MAX_VALUE)
        );
        pnlChatBoxLayout.setVerticalGroup(
            pnlChatBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        scrChatBox.setViewportView(pnlChatBox);

        javax.swing.GroupLayout pnlFriendCurrentLayout = new javax.swing.GroupLayout(pnlFriendCurrent);
        pnlFriendCurrent.setLayout(pnlFriendCurrentLayout);
        pnlFriendCurrentLayout.setHorizontalGroup(
            pnlFriendCurrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                .addGroup(pnlFriendCurrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel4)
                        .addGap(130, 130, 130)
                        .addGroup(pnlFriendCurrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNameFriendSelected)
                            .addComponent(jLabel1)))
                    .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrChatBox, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(241, Short.MAX_VALUE))
            .addGroup(pnlFriendCurrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 233, Short.MAX_VALUE)))
        );
        pnlFriendCurrentLayout.setVerticalGroup(
            pnlFriendCurrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                .addGroup(pnlFriendCurrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lbNameFriendSelected)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrChatBox, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(546, 546, 546))
            .addGroup(pnlFriendCurrentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlFriendCurrentLayout.createSequentialGroup()
                    .addGap(644, 644, 644)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(478, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 940, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 670, Short.MAX_VALUE)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 670, Short.MAX_VALUE)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addGap(270, 270, 270)
                    .addComponent(pnlFriendCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 664, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 801, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(617, Short.MAX_VALUE)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(159, 159, 159)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(27, Short.MAX_VALUE)))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlFriendCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(97, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        DefaultListModel modelLogout = new DefaultListModel();
        modelLogout.addElement(Constants.LOGOUT);
        modelLogout.addElement(Singleton.client.getName());
        Singleton.client.SendMessage(modelLogout);
        new LoginForm().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void tbInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {

            if (!Singleton.IsChatGroup) {
                int index = listFriendContacts.getSelectedIndex();
                Friend friend = (com.niu.client.Friend) FriendManager.ListFriend.get(index);

                DefaultListModel listFriend = new DefaultListModel();
                listFriend.addElement(friend.getName());
                DefaultListModel listModel = new DefaultListModel();
                listModel.addElement(Constants.SEND_MSG);
                listModel.addElement(tbInput.getText());
                listModel.addElement(tfUserName.getText());
                listModel.addElement(listFriend);

                CreateBoxMessage(tbInput.getText(), true);
                Singleton.client.SendMessage(listModel);
            } else {
                int index = listGroup.getSelectedIndex();
                Group group = (Group) GroupManager.ListGroup.elementAt(index);
                DefaultListModel listModel = new DefaultListModel();
                for (int i = 0; i < group.getMembers().size(); i++) {
                    if (!group.getMembers().elementAt(i).equals(Singleton.client.getName())) {
                        // listModel.addElement(group.getMembers().elementAt(i).getName());
                    }
                }
                DefaultListModel model = new DefaultListModel();
                model.addElement(Constants.SEND_MSG);
                model.addElement(tbInput.getText());
                model.addElement(tfUserName.getText());
                model.addElement(listModel);

                CreateBoxMessage(tbInput.getText(), true);
                Singleton.client.SendMessage(listModel);
            }
            tbInput.setText("");
        }
    }//GEN-LAST:event_tbInputKeyPressed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        if (!Singleton.IsChatGroup) {
            int index = listFriendContacts.getSelectedIndex();
            Friend friend = (Friend) FriendManager.ListFriend.get(index);

            DefaultListModel listFriend = new DefaultListModel();
            listFriend.addElement(friend.getName());
            DefaultListModel listModel = new DefaultListModel();
            listModel.addElement(Constants.SEND_MSG);
            listModel.addElement(tbInput.getText());
            listModel.addElement(tfUserName.getText());
            listModel.addElement(listFriend);

            CreateBoxMessage(tbInput.getText(), true);
            Singleton.client.SendMessage(listModel);
            tbInput.setText("");
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void tabPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabPanelStateChanged
        // TODO add your handling code here:
        this.listFriendContacts.clearSelection();
        this.listGroup.clearSelection();
    }//GEN-LAST:event_tabPanelStateChanged

    private int selectedFriendIndex = -1;
    private void listFriendContactsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listFriendContactsValueChanged
        // TODO add your handling code here:
        Singleton.IsChatGroup = false;
        int index = listFriendContacts.getSelectedIndex();
        pnlFriendCurrent.setVisible(index < 0 ? false : true);
        if (index == selectedFriendIndex) {
            return;
        }
        selectedFriendIndex = index;
        if (selectedFriendIndex > -1) {
            Friend f = (Friend) FriendManager.ListFriend.get(selectedFriendIndex);
            lbNameFriendSelected.setText(f.getName());
        }

        // reset panel chat box
        pnlChatBox.removeAll();
//        pnlChatBox.setPreferredSize(new Dimension(569, 341));
        pnlChatBox.revalidate();
        pnlChatBox.repaint();
        heightOfPanels = 0;
    }//GEN-LAST:event_listFriendContactsValueChanged

    private void listFriendContactsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listFriendContactsMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_listFriendContactsMousePressed

    private byte[] GetByteFile(java.io.File file) {
        try {
            byte[] buffer = new byte[(int)file.length()];
            DataInputStream in = new DataInputStream(new java.io.FileInputStream(file));
            in.readFully(buffer);
            return buffer;
        }catch(IOException exp) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, exp);
            return null;
        }
    }

    int selectedGroupIndex = -1;
    private void listGroupValueChanged(javax.swing.event.ListSelectionEvent evt) {
        Singleton.IsChatGroup = true;
        int index = listGroup.getSelectedIndex();
        pnlFriendCurrent.setVisible(index < 0 ? false : true);
        if (index == selectedGroupIndex) {
                return;
        }
        selectedGroupIndex = index;
        if (selectedGroupIndex > -1) {
            String name = ((Group) GroupManager.ListGroup.elementAt(selectedGroupIndex)).getName();
        }

        pnlChatBox.removeAll();
        pnlChatBox.setPreferredSize(new Dimension(569, 351));
        pnlChatBox.revalidate();
        pnlChatBox.repaint();
        heightOfPanels = 0;
    }

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultListModel modelLogout = new DefaultListModel();
        modelLogout.addElement(Constants.LOGOUT);
        modelLogout.addElement(Singleton.client.getName());
        Singleton.client.SendMessage(modelLogout);
        System.exit(0);
    }

    public static void invoke() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatar;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbNameFriendSelected;
    private javax.swing.JList<String> listFriendContacts;
    private javax.swing.JList<String> listGroup;
    private javax.swing.JPanel pnlChatBox;
    private javax.swing.JPanel pnlFriendCurrent;
    private javax.swing.JScrollPane scrChatBox;
    private javax.swing.JTabbedPane tabPanel;
    private javax.swing.JTextField tbInput;
    private javax.swing.JLabel tfUserName;
    // End of variables declaration//GEN-END:variables

    private void SendMessage(String message, File file, DefaultListModel receiver, Boolean isSendFile) {
      if (receiver == null || receiver.size() == 0) {
        return;
      }
      String userName = Singleton.client.getName().trim();
      String receiverString = ">>";
      for (int i = 0; i < receiver.size(); i++) {
        receiverString += ((Friend) receiver.getElementAt(i)).getName() + ">>";
      }
      if (!isSendFile) {
        if (!message.equals("")) {
          Singleton.client.SendMessage(userName + receiverString + message.trim());
        }
      } else {
        if (file == null) {
          return;
        }
      }
      tbInput.setText("");
      scrChatBox.getVerticalScrollBar().setValue(scrChatBox.getVerticalScrollBar().getMaximum());
    }

    public void ReceivedMessage(String message, String sender) {
        // Not Chat Group and not select friend
        if (!Singleton.IsChatGroup && selectedFriendIndex == -1) {
            return;
        }
        // If ChatBox not sender
        if (selectedFriendIndex > -1) {
            Friend f = (Friend) FriendManager.ListFriend.get(selectedFriendIndex);
            if (!sender.equals(f.getName())) {
                return;
            }
        }
        CreateBoxMessage(message, false);
    }

    private int heightOfPanels = 0;
    public void CreateBoxMessage(String message, Boolean isRight) {

      if (heightOfPanels + 100 > pnlChatBox.getSize().height) {
        if (scrChatBox.getVerticalScrollBarPolicy() != ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS) {
            scrChatBox.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        }
        pnlChatBox.setPreferredSize(
            new Dimension(pnlChatBox.getSize().width, heightOfPanels + 100)
        );
      }
      JPanel panel = new JPanel();
      JLabel text = new JLabel(message);

      Font font = new Font("Segoe UI Semilight", Font.PLAIN, 14);
      text.setFont(font);
      panel.add(text, CENTER_ALIGNMENT);

      // get width, height of message.
      AffineTransform affinetransform = new AffineTransform();
      FontRenderContext frc = new FontRenderContext(affinetransform, true, true);
      int textWidth = (int)(font.getStringBounds(message,  frc).getWidth());
      int textHeight = (int)(font.getStringBounds(message,  frc).getHeight());
      // set size for panel
      int widthPanel = textWidth + 20;
      int heightPanel = textHeight + 20;
      panel.setSize(widthPanel, heightPanel);
      //set location for panel.
      int x = 0;
      if (isRight) {
        x = pnlChatBox.getSize().width - widthPanel - 80;
      } else {
        x = 50;
      }

      heightOfPanels += 20;
      panel.setLocation(x, heightOfPanels);
      heightOfPanels += heightPanel;

      // set background
      if (isRight) {
        panel.setBackground(new Color(159, 255, 169));
      } else {
        panel.setBackground(new Color(200, 200, 200));
      }

      // add to pnlChatBox and update content
      pnlChatBox.add(panel);
      pnlChatBox.validate();
      pnlChatBox.repaint();
      scrollDown(scrChatBox);
    }

    public void CreatteBoxSendFile(String fileName, Boolean isRight) {
      if (heightOfPanels + 200 > pnlChatBox.getSize().height) {
        if (scrChatBox.getVerticalScrollBarPolicy() != ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS) {
            scrChatBox.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        }
        pnlChatBox.setPreferredSize(
          new Dimension(pnlChatBox.getSize().width, heightOfPanels + 200)
        );
      }
      JPanel panel = new JPanel();
      JLabel text = new JLabel(fileName);
      JLabel lbIconFile = new JLabel();
      lbIconFile.setSize(48, 48);
      if (isRight) {
        lbIconFile.setIcon(new ImageIcon(this.folderIconPath + "\\file2.png"));
      } else {
        lbIconFile.setIcon(new ImageIcon(this.folderIconPath + "\\file1.png"));
      }
      panel.add(lbIconFile);
      Font font = new Font("Segoe UI Semilight", Font.PLAIN, 14);
      text.setFont(font);
      panel.add(text, CENTER_ALIGNMENT);

      // get width, height of message.
      AffineTransform affinetransform = new AffineTransform();
      FontRenderContext frc = new FontRenderContext(affinetransform, true, true);
      int textWidth = (int)(font.getStringBounds(fileName,  frc).getWidth());
      int textHeight = (int)(font.getStringBounds(fileName,  frc).getHeight());
      // set size for panel
      int widthPanel = textWidth + 60;
      int heightPanel = textHeight + 35;
      panel.setSize(widthPanel, heightPanel);
      //set location for panel.
      int x = 0;
      if (isRight) {
        x = pnlChatBox.getSize().width - widthPanel - 80;
      } else {
        x = 50;
      }
      heightOfPanels += 20;
      panel.setLocation(x, heightOfPanels);
      heightOfPanels += heightPanel;

      // set background
      if (isRight) {
        panel.setBackground(new Color(159, 255, 169));
      } else {
        panel.setBackground(new Color(200, 200, 200));
      }
      
      // add to pnlChatBox and update content
      pnlChatBox.add(panel);
      pnlChatBox.validate();
      pnlChatBox.repaint();
    }

    private void GetFileFromServer(String fileName) {
      DefaultListModel model = new DefaultListModel();
      model.addElement(Constants.GET_FILE);
      model.addElement(fileName);
      model.addElement(Singleton.class.getName());
      Singleton.client.SendMessage(model);
    }
    
    /**
    * Scrolls a {@code scrollPane} to its bottom.
    * 
    * @param scrollPane
    *            the scrollPane that we want to scroll all the way down
    * 
    */
   private void scrollDown(JScrollPane scrollPane) {
       JScrollBar verticalBar = scrollPane.getVerticalScrollBar();

       int currentScrollValue = verticalBar.getValue();
       int previousScrollValue = -1;

       while (currentScrollValue != previousScrollValue) {
           // Scroll down a bit
           int downDirection = 1;
           int amountToScroll = verticalBar.getUnitIncrement(downDirection);
           verticalBar.setValue(currentScrollValue + amountToScroll);

           previousScrollValue = currentScrollValue;
           currentScrollValue = verticalBar.getValue();
       }
   }
}
